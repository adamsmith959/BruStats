{"version":3,"sources":["components/TopStats.js","components/BarChart.js","components/CapRace.js","components/SpoonRace.js","components/BestPerformanceRecent.js","components/HeadToHead.js","components/BarChart1.js","components/Standings.js","components/LineChart.js","components/SeasonPos.js","components/Tabs.js","App.js","reportWebVitals.js","index.js"],"names":["TopStatView","_ref","title","data","subtitle","react_default","a","createElement","Box","style","width","display","marginLeft","marginRight","Typography","height","border","borderRadius","justifyContent","alignItems","variant","Object","values","keys","map","name","idx","join","TopStats","_ref2","performance","num","totals","rounds","slice","forEach","week","results","user","parseInt","total","sx","flexGrow","Grid2","container","spacing","md","item","entries","max","Math","apply","toConsumableArray","fromEntries","filter","bestPerformer","min","worstPerformer","cap","mostCaps","spoon","mostSpoons","BarChart","dimensions","svgRef","React","useRef","_dimensions$margin","margin","svgWidth","left","right","svgHeight","top","bottom","useEffect","newData","x","scaleLinear","domain","d3","d","value","range","y","scaleBand","length","svg","current","attr","selectAll","remove","append","text","concat","call","ticks","bar","i","bandwidth","ref","CapRace","components_BarChart","sort","b","key","formatData","SpoonRace","BestPerformanceRecent","Row","player1","player2","p1Color","p2Color","p1Border","p2Border","Stack","direction","color","HeadToHead","_useState","useState","_useState2","slicedToArray","players","setPlayers","_useState3","_useState4","setPlayer1","_useState5","_useState6","setPlayer2","_useState7","_useState8","stats","setStats","leaderboards","leaderboard","trim","objectSpread","pos","best","worst","Fragment","Select","defaultValue","onChange","event","target","MenuItem","parseFloat","slam","exact","close","Standings","BarChart1","LineChart","round","index","result","push","namesOrder","xScale","yScale","ceil","_loop","player","playerEl","split","on","this","parentNode","enter","line","datum","id2","TabPanel","props","children","other","objectWithoutProperties","react","assign","role","hidden","id","aria-labelledby","p","a11yProps","aria-controls","BasicTabs","_React$useState","_React$useState2","setValue","borderBottom","borderColor","Tabs","newValue","aria-label","centered","Tab","label","components_Standings","SeasonPos","components_LineChart","components_BestPerformanceRecent","components_CapRace","components_SpoonRace","components_HeadToHead","portfolio","date","Date","schc","vcit","App","className","Container","gutterBottom","components_TopStats","marginBottom","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.0948e40d.chunk.js","sourcesContent":["import React from 'react'\r\nimport Stack from '@mui/material/Stack';\r\nimport Paper from '@mui/material/Paper';\r\nimport Typography from '@mui/material/Typography';\r\nimport Box from '@mui/material/Box';\r\nimport Grid from '@mui/material/Unstable_Grid2';\r\n\r\nfunction TopStatView({title, subtitle, data}) {\r\n  return (\r\n    <Box style={{width: 150, display: 'block', marginLeft: 'auto', marginRight: 'auto'}}>\r\n      <Typography style={{display: 'flex', height: 150, width: 150, border: '1px solid steelblue', borderRadius: \"50%\"}} justifyContent=\"center\" alignItems=\"center\" variant='h4'>{Object.values(data)[0]}</Typography>\r\n      <Typography variant='h6'>{title}</Typography>\r\n      {/* <Typography variant='subtitle1'>{subtitle}</Typography> */}\r\n      <Typography variant='body2'>\r\n        {Object.keys(data).map((name, idx) => {\r\n          return name\r\n        }).join(', ')}\r\n      </Typography>\r\n    </Box>\r\n  )\r\n}\r\n  \r\nfunction TopStats({data}) {\r\n  const performance = (num) => {\r\n    const totals = {}\r\n    data.rounds.slice(num).forEach(week => {\r\n      week.results.forEach(user => {\r\n        if (user.name in totals === false) totals[user.name] = 0\r\n        totals[user.name] += parseInt(user.total)\r\n      })\r\n    })\r\n    return totals\r\n  }\r\n  \r\n  const bestPerformer = (num) => {\r\n    const totals = Object.entries(performance(num))\r\n    const max = Math.max(...totals.map(user => user[1]))\r\n    return Object.fromEntries(totals.filter(user => user[1] >= max))\r\n  }\r\n  \r\n  const worstPerformer = (num) => {\r\n    const totals = Object.entries(performance(num))\r\n    const min = Math.min(...totals.map(user => user[1]))\r\n    return Object.fromEntries(totals.filter(user => user[1] <= min))\r\n  }\r\n  \r\n  const mostCaps = () => {\r\n    let totals = {}\r\n    data.rounds.forEach(week => {\r\n      week.results.forEach(user => {\r\n        if (user.name in totals === false) totals[user.name] = 0\r\n        if (user.cap === true) totals[user.name] += 1\r\n      })\r\n    })\r\n    totals = Object.entries(totals)\r\n    const max = Math.max(...totals.map(user => user[1]))\r\n    return Object.fromEntries(totals.filter(user => user[1] >= max))\r\n  }\r\n  \r\n  const mostSpoons = () => {\r\n    let totals = {}\r\n    data.rounds.forEach(week => {\r\n      week.results.forEach(user => {\r\n        if (user.name in totals === false) totals[user.name] = 0\r\n        if (user.spoon === true) totals[user.name] += 1\r\n      })\r\n    })\r\n    totals = Object.entries(totals)\r\n    const max = Math.max(...totals.map(user => user[1]))\r\n    return Object.fromEntries(totals.filter(user => user[1] >= max))\r\n  }\r\n  \r\n  return (\r\n    <Box sx={{ flexGrow: 1 }}>\r\n      {/* <Stack direction=\"row\" spacing={2} justifyContent=\"center\"> */}\r\n      <Grid container spacing={2}>\r\n        <Grid md={3} item>\r\n          <TopStatView title=\"Best Performer\" subtitle=\"Last 5\" data={bestPerformer(-5)} />\r\n        </Grid>\r\n        <Grid md={3} item>\r\n          <TopStatView title=\"Worst Performer\" subtitle=\"Last 5\" data={worstPerformer(-5)} />\r\n        </Grid>\r\n        <Grid md={3} item>\r\n          <TopStatView title=\"Most Caps\" data={mostCaps()} />\r\n        </Grid>\r\n        <Grid md={3} item>\r\n          <TopStatView title=\"Most Spoons\" data={mostSpoons()} />\r\n        </Grid>\r\n      </Grid>\r\n      {/* </Stack> */}\r\n    </Box>\r\n  )\r\n}\r\n    \r\nexport default TopStats","import React from \"react\";\r\nimport * as d3 from \"d3\";\r\nimport { scaleLinear, scaleBand } from \"d3-scale\";\r\n\r\nconst BarChart = ({data, dimensions, title}) => {\r\n    const svgRef = React.useRef(null);\r\n    const { width, height, margin = {} } = dimensions;\r\n    const svgWidth = width + margin.left + margin.right;\r\n    const svgHeight = height + margin.top + margin.bottom;\r\n\r\n    \r\n    React.useEffect(() => {\r\n        const newData = data\r\n        \r\n        const x = scaleLinear()\r\n            .domain([0, d3.max(newData.map(d => d.value))])\r\n            .range([0, width]);\r\n        \r\n        const y = scaleBand()\r\n            .domain(d3.range(newData.length))\r\n            .range([0, height]);\r\n        \r\n        // Create root container where we will append all other chart elements\r\n        const svg = d3.select(svgRef.current)\r\n            .attr(\"font-family\", \"sans-serif\")\r\n            .attr(\"font-size\", \"10\")\r\n            .attr(\"text-anchor\", \"end\");\r\n        svg.selectAll(\"*\").remove(); // Clear svg content before adding new elements\r\n\r\n        svg.append(\"text\")\r\n            .attr(\"x\", (svgWidth/2))\r\n            .attr(\"y\", 20)\r\n            .attr(\"text-anchor\", \"middle\")\r\n            .attr(\"font-size\", \"18\")\r\n            .attr(\"font-weight\", \"bold\")\r\n            .text(title)\r\n\r\n        svg.append(\"g\")\r\n            .attr(\"transform\", `translate(${margin.left}, ${height+margin.top})`)\r\n            .call(d3.axisBottom(x).ticks());\r\n\r\n        const bar = svg.selectAll(\"g.bars\")\r\n            .data(newData)\r\n            .join(\"g\")\r\n                .attr(\"transform\", (d, i) => `translate(${margin.left},${y(i)+margin.top})`)\r\n                .attr(\"class\", \"bars\")\r\n\r\n        bar.append(\"rect\")\r\n            .attr(\"fill\", \"steelblue\")\r\n            .attr(\"width\", d => x(d.value))\r\n            .attr(\"height\", y.bandwidth() - 1);\r\n        \r\n        bar.append(\"text\")\r\n            .attr(\"fill\", \"white\")\r\n            .attr(\"font-size\", \"12\")\r\n            .attr(\"x\", d => x(d.value) - 8)\r\n            .attr(\"y\", (y.bandwidth() - 1) / 2)\r\n            .attr(\"dy\", \"0.35em\")\r\n            .text(d => d.value);\r\n            \r\n        bar.append(\"text\")\r\n            .attr(\"text-anchor\", \"start\")\r\n            .attr(\"fill\", \"white\")\r\n            .attr(\"font-size\", \"12\")\r\n            .attr(\"x\", 15)\r\n            .attr(\"y\", (y.bandwidth() - 1) / 2)\r\n            .attr(\"dy\", \"0.35em\")\r\n            .text(d => d.name);\r\n        \r\n        bar.append(\"text\")\r\n            .attr(\"text-anchor\", \"end\")\r\n            .attr(\"fill\", \"black\")\r\n            .attr(\"font-size\", \"12\")\r\n            .attr(\"font-weight\", \"bold\")\r\n            .attr(\"x\", -10)\r\n            .attr(\"y\", (y.bandwidth() - 1) / 2)\r\n            .attr(\"dy\", \"0.35em\")\r\n            .text((d, i) => {\r\n                if (i > 0 && d.value === newData[i-1].value) return null\r\n                return i+1\r\n            });\r\n\r\n    }, [data])\r\n\r\n    return <svg style={{border: \"1px solid steelblue\"}} ref={svgRef} width={svgWidth} height={svgHeight} />;\r\n}\r\n\r\nexport default BarChart","import React from \"react\";\r\nimport BarChart from './BarChart'\r\n\r\nconst CapRace = ({data, dimensions}) => {\r\n    const formatData = function(data) {\r\n        let totals = {}\r\n        data.forEach(week => {\r\n          week.results.forEach(user => {\r\n            if (user.name in totals === false) totals[user.name] = 0\r\n            if (user.cap === true) totals[user.name] += 1\r\n          })\r\n        })\r\n        \r\n        return Object.entries(totals)\r\n          .filter(user => user[1] > 0)\r\n          .sort((a, b) => b[1] - a[1])\r\n          .map((key) => {\r\n            return {name: key[0], value: key[1]}\r\n        })\r\n    }\r\n\r\n    return <BarChart title=\"Cap Race\" data={formatData(data)} dimensions={dimensions} />\r\n}\r\n\r\nexport default CapRace","import React from \"react\";\r\nimport BarChart from './BarChart'\r\n\r\nconst SpoonRace = ({data, dimensions}) => {\r\n  const formatData = (data) => {\r\n    let totals = {}\r\n    data.forEach(week => {\r\n      week.results.forEach(user => {\r\n        if (user.name in totals === false) totals[user.name] = 0\r\n        if (user.spoon === true) totals[user.name] += 1\r\n      })\r\n    })\r\n    return Object.entries(totals)\r\n      .filter(user => user[1] > 0)\r\n      .sort((a, b) => b[1] - a[1])\r\n      .map((key) => {\r\n        return {name: key[0], value: key[1]}\r\n      })\r\n  }\r\n\r\n  return <BarChart title=\"Spoon Race\" data={formatData(data)} dimensions={dimensions} />\r\n}\r\n\r\nexport default SpoonRace\r\n","import React from \"react\";\r\nimport BarChart from './BarChart'\r\n\r\nconst BestPerformanceRecent = ({data, dimensions}) => {\r\n    const formatData = () => {\r\n        const totals = {}\r\n        data.slice(-5).forEach(week => {\r\n          week.results.forEach(user => {\r\n            if (user.name in totals === false) totals[user.name] = 0\r\n            totals[user.name] += parseInt(user.total)\r\n          })\r\n        })\r\n\r\n        return Object.entries(totals)\r\n            .filter(user => user[1] > 0)\r\n            .sort((a, b) => b[1] - a[1])\r\n            .map((key) => {\r\n                return {name: key[0], value: key[1]}\r\n            })\r\n    }\r\n\r\n    return <BarChart title=\"Recent Performance (Last 5)\" data={formatData(data)} dimensions={dimensions} />\r\n}\r\n\r\nexport default BestPerformanceRecent","import React from 'react'\r\nimport { useState, useEffect } from 'react'\r\nimport Box from '@mui/material/box'\r\nimport Stack from '@mui/material/Stack';\r\nimport Typography from '@mui/material/Typography'; \r\nimport { InputLabel, Select, MenuItem } from '@mui/material'\r\n\r\nfunction Row({player1, player2, title, sort}) {\r\n  let p1Color = 'black', p2Color = 'black', p1Border = '1px solid white', p2Border = '1px solid white'\r\n\r\n  if (player1 > player2 && sort === 'highest') p1Color = '#b44683'\r\n  else if (player1 < player2 && sort === 'highest') p2Color = '#b44683'\r\n  else if (player1 > player2 && sort === 'lowest') p2Color = '#b44683'\r\n  else if (player1 < player2 && sort === 'lowest') p1Color = '#b44683'\r\n\r\n  if (player1 > player2 && sort === 'highest') p1Border = '1px solid steelblue'\r\n  else if (player1 < player2 && sort === 'highest') p2Border = '1px solid steelblue'\r\n  else if (player1 > player2 && sort === 'lowest') p2Border = '1px solid steelblue'\r\n  else if (player1 < player2 && sort === 'lowest') p1Border = '1px solid steelblue'\r\n\r\n  return (\r\n    <Stack direction=\"row\" spacing={1} justifyContent=\"space-evenly\">\r\n      <Typography width={100} style={{color: p1Color, border: p1Border}} variant='h6'>{player1}</Typography>\r\n      <Typography width={150} variant='h6'>{title}</Typography>\r\n      <Typography width={100} style={{color: p2Color, border: p2Border}} variant='h6'>{player2}</Typography>\r\n    </Stack>\r\n  )\r\n}\r\n\r\nfunction HeadToHead({data}) {\r\n  const [players, setPlayers] = useState()\r\n  const [player1, setPlayer1] = useState('Jdart')\r\n  const [player2, setPlayer2] = useState('AdamSmith959')\r\n  const [stats, setStats] = useState()\r\n\r\n  useEffect(() => {\r\n    const players = {}\r\n\r\n    data.leaderboards.forEach(leaderboard => {\r\n      leaderboard.results.forEach((user, idx) => {\r\n        players[user.name.trim()] = {\r\n          ...user,\r\n          pos: idx+1,\r\n          cap: 0,\r\n          spoon: 0,\r\n          best: null,\r\n          worst: null\r\n        }\r\n      })\r\n    })\r\n\r\n    data.rounds.forEach(week => {\r\n      week.results.forEach(user => {\r\n        user.total = parseInt(user.total)\r\n        if (user.cap === true) players[user.name].cap += 1\r\n        if (user.spoon === true) players[user.name].spoon += 1\r\n        if (players[user.name].best === null || user.total > players[user.name].best) players[user.name].best = user.total\r\n        if (players[user.name].worst === null || user.total < players[user.name].worst) players[user.name].worst = user.total\r\n      })\r\n    })\r\n\r\n    setPlayers(Object.keys(players).sort())\r\n    setStats(players)\r\n  }, [data])\r\n\r\n  const handlePlayer1 = (event) => {\r\n    // console.log(event.target.value)\r\n    setPlayer1(event.target.value)\r\n  }\r\n\r\n  const handlePlayer2 = (event) => {\r\n    setPlayer2(event.target.value)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {stats &&\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\">\r\n        {/* <InputLabel>Player1</InputLabel> */}\r\n        <Stack spacing={1}>\r\n          <Stack direction=\"row\" spacing={2} justifyContent=\"space-evenly\">\r\n            <Select\r\n              style={{width: 200}}\r\n              defaultValue={player1}\r\n              onChange={handlePlayer1}\r\n            >\r\n              {players && players.map((key, idx) => <MenuItem value={key}>{key}</MenuItem>)}\r\n            </Select>\r\n\r\n            <Select\r\n              style={{width: 200}}\r\n              defaultValue={player2}\r\n              onChange={handlePlayer2}\r\n            >\r\n              {players && players.map((key, idx) => <MenuItem value={key}>{key}</MenuItem>)}\r\n            </Select>\r\n          </Stack>\r\n\r\n          <Row player1={parseFloat(stats[player1].pos)} player2={parseFloat(stats[player2].pos)} title='Position' sort='lowest' />\r\n          <Row player1={parseFloat(stats[player1].total)} player2={parseFloat(stats[player2].total)} title='Points' sort='highest' />\r\n          <Row player1={parseFloat(stats[player1].slam)} player2={parseFloat(stats[player2].slam)} title='Slam' sort='highest' />\r\n          <Row player1={parseFloat(stats[player1].exact)} player2={parseFloat(stats[player2].exact)} title='Exact' sort='highest' />\r\n          <Row player1={parseFloat(stats[player1].close)} player2={parseFloat(stats[player2].close)} title='Close' sort='highest' />\r\n          <Row player1={parseFloat(stats[player1].results)} player2={parseFloat(stats[player2].results)} title='Results' sort='highest' />\r\n          <Row player1={parseFloat(stats[player1].cap)} player2={parseFloat(stats[player2].cap)} title='Caps' sort='highest' />\r\n          <Row player1={parseFloat(stats[player1].spoon)} player2={parseFloat(stats[player2].spoon)} title='Spoons' sort='lowest' />\r\n          <Row player1={parseFloat(stats[player1].best)} player2={parseFloat(stats[player2].best)} title='Best Result' sort='highest' />\r\n          <Row player1={parseFloat(stats[player1].worst)} player2={parseFloat(stats[player2].worst)} title='Worst Result' sort='highest' />\r\n        </Stack>\r\n        {/* <pre>{JSON.stringify(stats[player1], null, 2)}</pre> */}\r\n        {/* <pre>{JSON.stringify(stats[player2], null, 2)}</pre> */}\r\n      </Box>\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default HeadToHead","import React from \"react\";\r\nimport * as d3 from \"d3\";\r\nimport { scaleLinear, scaleBand } from \"d3-scale\";\r\n\r\nconst BarChart = ({data, dimensions, title}) => {\r\n    const svgRef = React.useRef(null);\r\n    const { width, height, margin = {} } = dimensions;\r\n    const svgWidth = width + margin.left + margin.right;\r\n    const svgHeight = height + margin.top + margin.bottom;\r\n\r\n    \r\n    React.useEffect(() => {\r\n        const newData = data\r\n        \r\n        const x = scaleLinear()\r\n            .domain([0, d3.max(newData.map(d => d.total))])\r\n            .range([0, width]);\r\n        \r\n        const y = scaleBand()\r\n            .domain(d3.range(newData.length))\r\n            .range([0, height]);\r\n        \r\n        // Create root container where we will append all other chart elements\r\n        const svg = d3.select(svgRef.current)\r\n            .attr(\"font-family\", \"sans-serif\")\r\n            .attr(\"font-size\", \"10\")\r\n            .attr(\"text-anchor\", \"end\");\r\n        svg.selectAll(\"*\").remove(); // Clear svg content before adding new elements\r\n\r\n        svg.append(\"text\")\r\n            .attr(\"x\", (svgWidth/2))\r\n            .attr(\"y\", 20)\r\n            .attr(\"text-anchor\", \"middle\")\r\n            .attr(\"font-size\", \"18\")\r\n            .attr(\"font-weight\", \"bold\")\r\n            .text(title)\r\n\r\n\r\n        svg.append(\"g\")\r\n            .attr(\"transform\", `translate(${margin.left}, ${height+margin.top})`)\r\n            .call(d3.axisBottom(x));\r\n\r\n        const bar = svg.selectAll(\"g.bars\")\r\n            .data(newData)\r\n            .join(\"g\")\r\n                .attr(\"transform\", (d, i) => `translate(${margin.left},${y(i)+margin.top})`)\r\n                .attr(\"class\", \"bars\")\r\n\r\n        bar.append(\"rect\")\r\n            .attr(\"fill\", \"steelblue\")\r\n            .attr(\"width\", d => x(d.total))\r\n            .attr(\"height\", y.bandwidth() - 1);\r\n\r\n        bar.append(\"rect\")\r\n            .attr(\"fill\", \"red\")\r\n            .attr(\"width\", d => x(d.results+d.close+d.exact+d.slam))\r\n            .attr(\"height\", y.bandwidth() - 1);\r\n\r\n        bar.append(\"rect\")\r\n            .attr(\"fill\", \"steelblue\")\r\n            .attr(\"width\", d => x(d.results+d.close+d.exact))\r\n            .attr(\"height\", y.bandwidth() - 1);\r\n\r\n        bar.append(\"rect\")\r\n            .attr(\"fill\", \"green\")\r\n            .attr(\"width\", d => x(d.results+d.close))\r\n            .attr(\"height\", y.bandwidth() - 1);\r\n\r\n        bar.append(\"rect\")\r\n            .attr(\"fill\", \"orange\")\r\n            .attr(\"width\", d => x(d.results))\r\n            .attr(\"height\", y.bandwidth() - 1);\r\n\r\n            \r\n        bar.append(\"text\")\r\n            .attr(\"fill\", \"black\")\r\n            .attr(\"font-size\", \"12\")\r\n            .attr(\"text-anchor\", \"end\")\r\n            .attr(\"x\", d => x(d.total) - 10)\r\n            .attr(\"y\", (y.bandwidth() - 1) / 2)\r\n            .attr(\"dy\", \"0.35em\")\r\n            .text(d => d.total);\r\n            \r\n        bar.append(\"text\")\r\n            .attr(\"text-anchor\", \"start\")\r\n            .attr(\"fill\", \"black\")\r\n            .attr(\"font-size\", \"12\")\r\n            .attr(\"x\", 15 + width)\r\n            .attr(\"y\", (y.bandwidth() - 1) / 2)\r\n            .attr(\"dy\", \"0.35em\")\r\n            .text(d => d.name);\r\n        \r\n        bar.append(\"text\")\r\n            .attr(\"text-anchor\", \"end\")\r\n            .attr(\"fill\", \"black\")\r\n            .attr(\"font-size\", \"12\")\r\n            .attr(\"font-weight\", \"bold\")\r\n            .attr(\"x\", -10)\r\n            .attr(\"y\", (y.bandwidth() - 1) / 2)\r\n            .attr(\"dy\", \"0.35em\")\r\n            .text((d, i) => {\r\n                if (i > 0 && d.total === newData[i-1].total) return null\r\n                return i+1\r\n            });\r\n\r\n    }, [data])\r\n\r\n    return <svg style={{border: \"1px solid steelblue\"}} ref={svgRef} width={svgWidth} height={svgHeight} />;\r\n}\r\n\r\nexport default BarChart","import React from \"react\";\r\nimport BarChart from './BarChart1'\r\n\r\nconst Standings = ({data, dimensions}) => {\r\n    data = data.map(d => {\r\n        return {\r\n            name: d.name,\r\n            total: parseFloat(d.total),\r\n            results: parseFloat(d.results),\r\n            close: parseFloat(d.close),\r\n            exact: parseFloat(d.exact),\r\n            slam: parseFloat(d.slam)\r\n        }\r\n    })\r\n\r\n    return <BarChart title=\"Total Points\" data={data} dimensions={dimensions} />\r\n}\r\n\r\nexport default Standings","import React from \"react\";\r\nimport * as d3 from \"d3\";\r\nimport { scaleLinear } from \"d3-scale\";\r\n\r\n\r\n\r\nconst LineChart = ({data, dimensions}) => {\r\n    const svgRef = React.useRef(null);\r\n    const { width, height, margin = {} } = dimensions;\r\n    const svgWidth = width + margin.left + margin.right;\r\n    const svgHeight = height + margin.top + margin.bottom;\r\n\r\n    const players = {}\r\n    data.forEach((round, index) => {\r\n        round.results.forEach(result => {\r\n            if (result.name in players === false) players[result.name] = []\r\n            players[result.name].push([index+1, result.total])\r\n        })\r\n    })\r\n\r\n    // console.log(data[data.length-1].results)\r\n    const namesOrder = data[data.length-1].results.map(result => result.name)\r\n    \r\n    React.useEffect(() => {\r\n        const xScale = scaleLinear().domain([1, data.length]).range([0, width])\r\n        const yScale = d3.scaleLinear().domain([0, Math.ceil(data[data.length-1].results[0].total)]).range([height, 0])\r\n\r\n        // Create root container where we will append all other chart elements\r\n        const svg = d3.select(svgRef.current)\r\n            .attr(\"font-family\", \"sans-serif\")\r\n            .attr(\"font-size\", \"10\")\r\n            .attr(\"text-anchor\", \"end\");\r\n        svg.selectAll(\"*\").remove(); // Clear svg content before adding new elements\r\n\r\n        // Title\r\n        svg.append('text')\r\n            .attr('x', svgWidth / 2)\r\n            .attr('y', 20)\r\n            .attr('text-anchor', 'middle')\r\n            .style('font-family', 'Helvetica')\r\n            .style('font-size', 20)\r\n            .text('Season Points');\r\n\r\n        // X axis\r\n        svg.append(\"g\")\r\n            .attr(\"transform\", `translate(${margin.left}, ${height+margin.top})`)\r\n            .call(d3.axisBottom(xScale).ticks(data.length));\r\n        // X label\r\n        svg.append('text')\r\n            .attr('x', width/2)\r\n            .attr('y', height + margin.top + 35 )\r\n            .attr('text-anchor', 'middle')\r\n            .style('font-family', 'Helvetica')\r\n            .style('font-size', 12)\r\n            .text('Rounds');\r\n        // Y axis\r\n        svg.append(\"g\")\r\n            .attr(\"transform\", `translate(${margin.left}, ${margin.top})`)\r\n            .call(d3.axisLeft(yScale));\r\n        // Y label\r\n        svg.append('text')\r\n            .attr('text-anchor', 'middle')\r\n            .attr('transform', `translate(${margin.left - 40}, ${svgHeight/2})rotate(-90)`)\r\n            .style('font-family', 'Helvetica')\r\n            .style('font-size', 12)\r\n            .text('Points');\r\n        \r\n        // const playerKeys = Object.keys(players)\r\n\r\n\r\n\r\n        for (let idx = 0; idx < namesOrder.length; idx++) {\r\n            const player = namesOrder[idx];\r\n            const playerEl = svg.append('g')\r\n                .attr('id', player.split(' ').join(''))\r\n                .attr('cursor', 'pointer')\r\n                .on(\"mouseover\", function(d) {\r\n                    // console.log('hover')\r\n                    d3.select(this).selectAll('text').style(\"fill\", \"#CC0000\");\r\n                    // d3.select(this.parentNode).selectAll(\"path.line:not(#\"+player.split(' ').join('')+\")\").style(\"stroke\", \"grey\")\r\n                    // d3.select(this.parentNode).selectAll(\"circle:not(#\"+player.split(' ').join('')+\")\").style(\"fill\", \"grey\")\r\n                    d3.select(this.parentNode).selectAll(\"path#\"+player.split(' ').join('')).style(\"stroke-width\", \"4\")\r\n                    d3.select(this.parentNode).selectAll(\"path#\"+player.split(' ').join('')).style(\"stroke\", \"#CC0000\")\r\n                })\r\n                .on(\"mouseout\", function(d) {\r\n                    d3.select(this).selectAll('text').style(\"fill\", \"black\");\r\n                    // d3.select(this.parentNode).selectAll(\"path.line:not(#\"+player.split(' ').join('')+\")\").style(\"stroke\", \"#CC0000\")\r\n                    // d3.select(this.parentNode).selectAll(\"circle:not(#\"+player.split(' ').join('')+\")\").style(\"fill\", \"#CC0000\")\r\n                    d3.select(this.parentNode).selectAll(\"path#\"+player.split(' ').join('')).style(\"stroke-width\", \"2\")\r\n                    d3.select(this.parentNode).selectAll(\"path#\"+player.split(' ').join('')).style(\"stroke\", \"grey\")\r\n                })\r\n    \r\n            playerEl.append('g')\r\n                .selectAll(\"dot\")\r\n                .data(players[player])\r\n                .enter()\r\n                .append(\"circle\")\r\n                .attr(\"cx\", function (d) { return xScale(d[0]); } )\r\n                .attr(\"cy\", function (d) { return yScale(d[1]); } )\r\n                .attr(\"r\", 2)\r\n                .attr(\"transform\", `translate(${margin.left}, ${margin.top})`)\r\n                .style(\"fill\", \"grey\");\r\n    \r\n            var line = d3.line()\r\n                .x(function(d) { return xScale(d[0]); }) \r\n                .y(function(d) { return yScale(d[1]); }) \r\n                // .curve(d3.curveMonotoneX)\r\n                \r\n            playerEl.append(\"path\")\r\n                .datum(players[player]) \r\n                .attr(\"class\", \"line\")\r\n                .attr(\"id\", player.split(' ').join(''))\r\n                .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\")\r\n                .attr(\"d\", line)\r\n                .style(\"fill\", \"none\")\r\n                .style(\"stroke\", \"grey\")\r\n                .style(\"stroke-width\", \"2\");\r\n    \r\n            playerEl.append('text')\r\n                .datum(players[player])\r\n                .attr('text-anchor', 'start')\r\n                .attr('alignment-baseline', 'middle')\r\n                .attr('transform', d => `translate(${width+margin.left+15}, ${margin.top+idx*20})`)\r\n                // .attr('transform', `translate(${width+margin.left+20}, ${100})`)\r\n                .style('font-family', 'Helvetica')\r\n                .style('font-size', 12)\r\n                .style('cursor', 'pointer')\r\n                .text(player)\r\n            \r\n        }\r\n\r\n\r\n        // data.forEach(dataset => {\r\n        //     svg.append('g')\r\n        //         .selectAll(\"dot\")\r\n        //         .data(dataset)\r\n        //         .enter()\r\n        //         .append(\"circle\")\r\n        //         .attr(\"cx\", function (d) { return xScale(d[0]); } )\r\n        //         .attr(\"cy\", function (d) { return yScale(d[1]); } )\r\n        //         .attr(\"r\", 2)\r\n        //         .attr(\"transform\", `translate(${margin.left}, ${margin.top})`)\r\n        //         .style(\"fill\", \"#CC0000\");\r\n    \r\n        //     var line = d3.line()\r\n        //         .x(function(d) { return xScale(d[0]); }) \r\n        //         .y(function(d) { return yScale(d[1]); }) \r\n        //         .curve(d3.curveMonotoneX)\r\n                \r\n        //     svg.append(\"path\")\r\n        //         .datum(dataset) \r\n        //         .attr(\"class\", \"line\") \r\n        //         .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\")\r\n        //         .attr(\"d\", line)\r\n        //         .style(\"fill\", \"none\")\r\n        //         .style(\"stroke\", \"#CC0000\")\r\n        //         .style(\"stroke-width\", \"2\");\r\n        // })\r\n\r\n    }, [data])\r\n\r\n    return <svg style={{border: \"1px solid steelblue\"}} ref={svgRef} width={svgWidth} height={svgHeight} />;\r\n}\r\n\r\nexport default LineChart","import React from \"react\";\r\nimport * as d3 from \"d3\";\r\nimport { scaleLinear } from \"d3-scale\";\r\n\r\n\r\n\r\nconst LineChart = ({data, dimensions}) => {\r\n    const svgRef = React.useRef(null);\r\n    const { width, height, margin = {} } = dimensions;\r\n    const svgWidth = width + margin.left + margin.right;\r\n    const svgHeight = height + margin.top + margin.bottom;\r\n\r\n    const players = {}\r\n    data.forEach((round, index) => {\r\n        round.results.forEach((result, id2) => {\r\n            if (result.name in players === false) players[result.name] = []\r\n            players[result.name].push([index+1, id2+1])\r\n        })\r\n    })\r\n\r\n    React.useEffect(() => {\r\n        const xScale = scaleLinear().domain([1, data.length]).range([0, width])\r\n        const yScale = d3.scaleLinear().domain([16, 1]).range([height, 0])\r\n        // const yScale = d3.scaleLinear().domain([0, Math.ceil(data[data.length-1].results[0].total)]).range([height, 0])\r\n\r\n        // Create root container where we will append all other chart elements\r\n        const svg = d3.select(svgRef.current)\r\n            .attr(\"font-family\", \"sans-serif\")\r\n            .attr(\"font-size\", \"10\")\r\n            .attr(\"text-anchor\", \"end\");\r\n        svg.selectAll(\"*\").remove(); // Clear svg content before adding new elements\r\n\r\n        // Title\r\n        svg.append('text')\r\n            .attr('x', svgWidth / 2)\r\n            .attr('y', 20)\r\n            .attr('text-anchor', 'middle')\r\n            .style('font-family', 'Helvetica')\r\n            .style('font-size', 20)\r\n            .text('Season Position');\r\n\r\n        // X axis\r\n        svg.append(\"g\")\r\n            .attr(\"transform\", `translate(${margin.left}, ${height+margin.top})`)\r\n            .call(\r\n                d3.axisBottom(xScale)\r\n                // .tickFormat(d3.format(\"d\"))\r\n                .ticks(data.length)\r\n            )\r\n            // .call(d3.axisBottom(xScale))\r\n        // X label\r\n        svg.append('text')\r\n            .attr('x', width/2)\r\n            .attr('y', height + margin.top + 35 )\r\n            .attr('text-anchor', 'middle')\r\n            .style('font-family', 'Helvetica')\r\n            .style('font-size', 12)\r\n            .text('Rounds');\r\n        // Y axis\r\n        svg.append(\"g\")\r\n            .attr(\"transform\", `translate(${margin.left}, ${margin.top})`)\r\n            .call(d3.axisLeft(yScale).ticks(16));\r\n        // Y label\r\n        svg.append('text')\r\n            .attr('text-anchor', 'middle')\r\n            .attr('transform', `translate(${margin.left - 40}, ${svgHeight/2})rotate(-90)`)\r\n            .style('font-family', 'Helvetica')\r\n            .style('font-size', 12)\r\n            .text('Points');\r\n        \r\n        \r\n\r\n        for(const player in players) {\r\n            const playerEl = svg.append('g')\r\n                .attr('id', player.split(' ').join(''))\r\n                .attr('cursor', 'pointer')\r\n                .on(\"mouseover\", function(d) {\r\n                    // console.log('hover')\r\n                    d3.select(this).selectAll('text').style(\"fill\", \"#CC0000\");\r\n                    // d3.select(this.parentNode).selectAll(\"path.line:not(#\"+player.split(' ').join('')+\")\").style(\"stroke\", \"grey\")\r\n                    // d3.select(this.parentNode).selectAll(\"circle:not(#\"+player.split(' ').join('')+\")\").style(\"fill\", \"grey\")\r\n                    d3.select(this.parentNode).selectAll(\"path#\"+player.split(' ').join('')).style(\"stroke-width\", \"4\")\r\n                    d3.select(this.parentNode).selectAll(\"path#\"+player.split(' ').join('')).style(\"stroke\", \"#CC0000\")\r\n                })\r\n                .on(\"mouseout\", function(d) {\r\n                    d3.select(this).selectAll('text').style(\"fill\", \"black\");\r\n                    // d3.select(this.parentNode).selectAll(\"path.line:not(#\"+player.split(' ').join('')+\")\").style(\"stroke\", \"#CC0000\")\r\n                    // d3.select(this.parentNode).selectAll(\"circle:not(#\"+player.split(' ').join('')+\")\").style(\"fill\", \"#CC0000\")\r\n                    d3.select(this.parentNode).selectAll(\"path#\"+player.split(' ').join('')).style(\"stroke-width\", \"2\")\r\n                    d3.select(this.parentNode).selectAll(\"path#\"+player.split(' ').join('')).style(\"stroke\", \"grey\")\r\n                })\r\n\r\n            playerEl.append('g')\r\n                .selectAll(\"dot\")\r\n                .data(players[player])\r\n                .enter()\r\n                .append(\"circle\")\r\n                .attr(\"id\", player.split(' ').join(''))\r\n                .attr(\"cx\", function (d) { return xScale(d[0]); } )\r\n                .attr(\"cy\", function (d) { return yScale(d[1]); } )\r\n                .attr(\"r\", 2)\r\n                .attr(\"transform\", `translate(${margin.left}, ${margin.top})`)\r\n                .style(\"fill\", \"grey\")\r\n\r\n            var line = d3.line()\r\n                .x(function(d) { return xScale(d[0]); }) \r\n                .y(function(d) { return yScale(d[1]); }) \r\n                // .curve(d3.curveMonotoneX)\r\n                \r\n            playerEl.append(\"path\")\r\n                .datum(players[player]) \r\n                .attr(\"class\", \"line\")\r\n                .attr(\"id\", player.split(' ').join(''))\r\n                .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\")\r\n                .attr(\"d\", line)\r\n                .style(\"fill\", \"none\")\r\n                .style(\"stroke\", \"grey\")\r\n                .style(\"stroke-width\", \"2\");\r\n\r\n            playerEl.append('text')\r\n                .datum(players[player])\r\n                .attr('text-anchor', 'start')\r\n                .attr('alignment-baseline', 'middle')\r\n                .attr('transform', d => `translate(${width+margin.left+15}, ${yScale(d[d.length-1][1])+margin.top})`)\r\n                // .attr('transform', `translate(${width+margin.left+20}, ${100})`)\r\n                .style('font-family', 'Helvetica')\r\n                .style('font-size', 12)\r\n                .style('cursor', 'pointer')\r\n                .text(player)\r\n        }\r\n\r\n        // data.forEach(dataset => {\r\n        //     svg.append('g')\r\n        //         .selectAll(\"dot\")\r\n        //         .data(dataset)\r\n        //         .enter()\r\n        //         .append(\"circle\")\r\n        //         .attr(\"cx\", function (d) { return xScale(d[0]); } )\r\n        //         .attr(\"cy\", function (d) { return yScale(d[1]); } )\r\n        //         .attr(\"r\", 2)\r\n        //         .attr(\"transform\", `translate(${margin.left}, ${margin.top})`)\r\n        //         .style(\"fill\", \"#CC0000\");\r\n    \r\n        //     var line = d3.line()\r\n        //         .x(function(d) { return xScale(d[0]); }) \r\n        //         .y(function(d) { return yScale(d[1]); }) \r\n        //         .curve(d3.curveMonotoneX)\r\n                \r\n        //     svg.append(\"path\")\r\n        //         .datum(dataset) \r\n        //         .attr(\"class\", \"line\") \r\n        //         .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\")\r\n        //         .attr(\"d\", line)\r\n        //         .style(\"fill\", \"none\")\r\n        //         .style(\"stroke\", \"#CC0000\")\r\n        //         .style(\"stroke-width\", \"2\");\r\n        // })\r\n\r\n    }, [data])\r\n\r\n    return <svg style={{border: \"1px solid steelblue\"}} ref={svgRef} width={svgWidth} height={svgHeight} />;\r\n}\r\n\r\nexport default LineChart","import * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Tabs from '@mui/material/Tabs';\r\nimport Tab from '@mui/material/Tab';\r\nimport Typography from '@mui/material/Typography';\r\nimport Box from '@mui/material/Box';\r\n\r\nimport HeadToHead from './HeadToHead';\r\nimport CapRace from './CapRace';\r\nimport SpoonRace from './SpoonRace';\r\nimport BestPerformanceRecent from './BestPerformanceRecent';\r\nimport Standings from './Standings';\r\nimport LineChart from './LineChart';\r\nimport SeasonPos from './SeasonPos';\r\nimport { margin } from '@mui/system';\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box sx={{ p: 3 }}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.number.isRequired,\r\n  value: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    'aria-controls': `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst dimensions = {\r\n    width: 600,\r\n    height: 300,\r\n    margin: {\r\n      top: 30,\r\n      right: 150,\r\n      bottom: 30,\r\n      left: 60\r\n    }\r\n};\r\n\r\nexport default function BasicTabs({data}) {\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ width: '100%' }}>\r\n      <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\r\n        <Tabs value={value} onChange={handleChange} aria-label=\"basic tabs example\" centered>\r\n          <Tab label=\"Analysis\" {...a11yProps(0)} />\r\n          {/* <Tab label=\"Individual\" {...a11yProps(1)} /> */}\r\n          <Tab label=\"Head To Head\" {...a11yProps(1)} />\r\n        </Tabs>\r\n      </Box>\r\n      <TabPanel value={value} index={0}>\r\n        <Standings data={data.leaderboards[data.leaderboards.length-1].results} dimensions={dimensions} />\r\n        <SeasonPos data={data.leaderboards} dimensions={{...dimensions, margin: {...dimensions.margin, right: 150, top: 40}}} />\r\n        <LineChart data={data.leaderboards} dimensions={{...dimensions, margin: {...dimensions.margin, right: 150}}} />\r\n        <BestPerformanceRecent data={data.rounds} dimensions={dimensions} />\r\n        <CapRace data={data.rounds} dimensions={dimensions} />\r\n        <SpoonRace data={data.rounds} dimensions={dimensions} />\r\n      </TabPanel>\r\n      {/* <TabPanel value={value} index={1}>\r\n      </TabPanel> */}\r\n      <TabPanel value={value} index={1}>\r\n        <HeadToHead data={data}/>\r\n      </TabPanel>\r\n    </Box>\r\n  );\r\n}\r\n","// import logo from './logo.svg';\nimport React from 'react'\nimport './App.css';\nimport data from './2022.json'\nimport Container from '@mui/material/Container';\nimport Typography from '@mui/material/Typography';\n\nimport schc from \"./SCHC.json\";\nimport vcit from \"./VCIT.json\";\nimport portfolio from \"./portfolio.json\";\n\nimport TopStats from './components/TopStats';\nimport MultilineChart from './components/MultilineChart'\nimport CapRace from './components/CapRace';\nimport SpoonRace from './components/SpoonRace';\nimport BestPerformanceRecent from './components/BestPerformanceRecent';\nimport Tabs from './components/Tabs'\n\nconst portfolioData = {\n  name: \"Portfolio\",\n  color: \"orange\",\n  items: portfolio.map((d) => ({ ...d, date: new Date(d.date) }))\n};\nconst schcData = {\n  name: \"SCHC\",\n  color: \"#d53e4f\",\n  items: schc.map((d) => ({ ...d, date: new Date(d.date) }))\n};\nconst vcitData = {\n  name: \"VCIT\",\n  color: \"#5e4fa2\",\n  items: vcit.map((d) => ({ ...d, date: new Date(d.date) }))\n};\n\nconst dimensions = {\n  width: 600,\n  height: 300,\n  margin: {\n    top: 30,\n    right: 30,\n    bottom: 30,\n    left: 60\n  }\n};\n\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Container>\n        <Typography style={{color: 'steelblue'}} variant='h2'>BruStats | Bude Beys</Typography>\n        <Typography variant='h4' gutterBottom>2022-23</Typography>\n      \n\n        <TopStats style={{marginBottom: 25}} data={data} />\n\n        <Tabs data={data}/>\n\n        <br />\n        {/* <BestPerformanceRecent data={data.rounds} dimensions={dimensions} /> */}\n        <br />\n        {/* <CapRace data={data.rounds} dimensions={dimensions} /> */}\n        <br />\n        {/* <SpoonRace data={data.rounds} dimensions={dimensions} /> */}\n        <br />\n        {/* <MultilineChart\n          data={[portfolioData, schcData, vcitData]}\n          dimensions={dimensions}\n        /> */}\n        {/* {JSON.stringify(data.leaderboards)} */}\n        {/* <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <p>\n            Edit <code>src/App.js</code> and save to reload.\n          </p>\n          <a\n            className=\"App-link\"\n            href=\"https://reactjs.org\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Learn React\n          </a>\n        </header> */}\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport '@fontsource/roboto/300.css';\nimport '@fontsource/roboto/400.css';\nimport '@fontsource/roboto/500.css';\nimport '@fontsource/roboto/700.css';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}