{"version":3,"sources":["components/TopStats.js","components/BarChart.js","components/CapRace.js","components/SpoonRace.js","components/BestPerformanceRecent.js","components/HeadToHead.js","components/BarChart1.js","components/Standings.js","components/LineChart.js","components/SeasonPos.js","components/Tabs.js","App.js","reportWebVitals.js","index.js"],"names":["TopStatView","_ref","title","data","subtitle","react_default","a","createElement","Paper","variant","style","width","Typography","Object","values","keys","map","name","TopStats","_ref2","performance","num","totals","rounds","slice","forEach","week","results","user","parseInt","total","Box","sx","Stack","direction","spacing","justifyContent","entries","max","Math","apply","toConsumableArray","fromEntries","filter","bestPerformer","min","worstPerformer","cap","mostCaps","spoon","mostSpoons","BarChart","dimensions","svgRef","React","useRef","height","_dimensions$margin","margin","svgWidth","left","right","svgHeight","top","bottom","useEffect","newData","x","scaleLinear","domain","d3","d","value","range","y","scaleBand","length","svg","current","attr","selectAll","remove","append","text","concat","call","ticks","bar","join","i","bandwidth","border","ref","CapRace","components_BarChart","sort","b","key","formatData","SpoonRace","BestPerformanceRecent","Row","player1","player2","p1Color","p2Color","p1Border","p2Border","color","HeadToHead","_useState","useState","_useState2","slicedToArray","players","setPlayers","_useState3","_useState4","setPlayer1","_useState5","_useState6","setPlayer2","_useState7","_useState8","stats","setStats","leaderboards","leaderboard","idx","trim","objectSpread","pos","best","worst","Fragment","display","alignItems","Select","defaultValue","onChange","event","target","MenuItem","parseFloat","slam","exact","close","Standings","BarChart1","LineChart","round","index","result","push","namesOrder","xScale","yScale","ceil","_loop","player","playerEl","split","on","this","parentNode","enter","line","datum","id2","TabPanel","props","children","other","objectWithoutProperties","react","assign","role","hidden","id","aria-labelledby","p","a11yProps","aria-controls","BasicTabs","_React$useState","_React$useState2","setValue","borderBottom","borderColor","Tabs","newValue","aria-label","centered","Tab","label","components_Standings","SeasonPos","components_LineChart","components_BestPerformanceRecent","components_CapRace","components_SpoonRace","components_HeadToHead","portfolio","date","Date","schc","vcit","App","className","Container","gutterBottom","components_TopStats","marginBottom","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.73999def.chunk.js","sourcesContent":["import React from 'react'\r\nimport Stack from '@mui/material/Stack';\r\nimport Paper from '@mui/material/Paper';\r\nimport Typography from '@mui/material/Typography';\r\nimport Box from '@mui/material/Box';\r\n\r\nfunction TopStatView({title, subtitle, data}) {\r\n  return (\r\n    <Paper variant='outlined' style={{width: 200}}>\r\n      <Typography variant='h6'>{title}</Typography>\r\n      {/* <Typography variant='subtitle1'>{subtitle}</Typography> */}\r\n      <Typography variant='subtitle1'>{Object.values(data)[0]}</Typography>\r\n      {Object.keys(data).map(name => {\r\n        return <p>{name}</p>\r\n      })}\r\n    </Paper>\r\n  )\r\n}\r\n  \r\nfunction TopStats({data}) {\r\n  const performance = (num) => {\r\n    const totals = {}\r\n    data.rounds.slice(num).forEach(week => {\r\n      week.results.forEach(user => {\r\n        if (user.name in totals === false) totals[user.name] = 0\r\n        totals[user.name] += parseInt(user.total)\r\n      })\r\n    })\r\n    return totals\r\n  }\r\n  \r\n  const bestPerformer = (num) => {\r\n    const totals = Object.entries(performance(num))\r\n    const max = Math.max(...totals.map(user => user[1]))\r\n    return Object.fromEntries(totals.filter(user => user[1] >= max))\r\n  }\r\n  \r\n  const worstPerformer = (num) => {\r\n    const totals = Object.entries(performance(num))\r\n    const min = Math.min(...totals.map(user => user[1]))\r\n    return Object.fromEntries(totals.filter(user => user[1] <= min))\r\n  }\r\n  \r\n  const mostCaps = () => {\r\n    let totals = {}\r\n    data.rounds.forEach(week => {\r\n      week.results.forEach(user => {\r\n        if (user.name in totals === false) totals[user.name] = 0\r\n        if (user.cap === true) totals[user.name] += 1\r\n      })\r\n    })\r\n    totals = Object.entries(totals)\r\n    const max = Math.max(...totals.map(user => user[1]))\r\n    return Object.fromEntries(totals.filter(user => user[1] >= max))\r\n  }\r\n  \r\n  const mostSpoons = () => {\r\n    let totals = {}\r\n    data.rounds.forEach(week => {\r\n      week.results.forEach(user => {\r\n        if (user.name in totals === false) totals[user.name] = 0\r\n        if (user.spoon === true) totals[user.name] += 1\r\n      })\r\n    })\r\n    totals = Object.entries(totals)\r\n    const max = Math.max(...totals.map(user => user[1]))\r\n    return Object.fromEntries(totals.filter(user => user[1] >= max))\r\n  }\r\n  \r\n  return (\r\n    <Box sx={{ width: '100%' }}>\r\n      <Stack direction=\"row\" spacing={2} justifyContent=\"center\">\r\n        <TopStatView title=\"Best Performer\" subtitle=\"Last 5\" data={bestPerformer(-5)} />\r\n        <TopStatView title=\"Worst Performer\" subtitle=\"Last 5\" data={worstPerformer(-5)} />\r\n        <TopStatView title=\"Most Caps\" data={mostCaps()} />\r\n        <TopStatView title=\"Most Spoons\" data={mostSpoons()} />\r\n      </Stack>\r\n    </Box>\r\n  )\r\n}\r\n    \r\nexport default TopStats","import React from \"react\";\r\nimport * as d3 from \"d3\";\r\nimport { scaleLinear, scaleBand } from \"d3-scale\";\r\n\r\nconst BarChart = ({data, dimensions, title}) => {\r\n    const svgRef = React.useRef(null);\r\n    const { width, height, margin = {} } = dimensions;\r\n    const svgWidth = width + margin.left + margin.right;\r\n    const svgHeight = height + margin.top + margin.bottom;\r\n\r\n    \r\n    React.useEffect(() => {\r\n        const newData = data\r\n        \r\n        const x = scaleLinear()\r\n            .domain([0, d3.max(newData.map(d => d.value))])\r\n            .range([0, width]);\r\n        \r\n        const y = scaleBand()\r\n            .domain(d3.range(newData.length))\r\n            .range([0, height]);\r\n        \r\n        // Create root container where we will append all other chart elements\r\n        const svg = d3.select(svgRef.current)\r\n            .attr(\"font-family\", \"sans-serif\")\r\n            .attr(\"font-size\", \"10\")\r\n            .attr(\"text-anchor\", \"end\");\r\n        svg.selectAll(\"*\").remove(); // Clear svg content before adding new elements\r\n\r\n        svg.append(\"text\")\r\n            .attr(\"x\", (svgWidth/2))\r\n            .attr(\"y\", 20)\r\n            .attr(\"text-anchor\", \"middle\")\r\n            .attr(\"font-size\", \"18\")\r\n            .attr(\"font-weight\", \"bold\")\r\n            .text(title)\r\n\r\n        svg.append(\"g\")\r\n            .attr(\"transform\", `translate(${margin.left}, ${height+margin.top})`)\r\n            .call(d3.axisBottom(x).ticks());\r\n\r\n        const bar = svg.selectAll(\"g.bars\")\r\n            .data(newData)\r\n            .join(\"g\")\r\n                .attr(\"transform\", (d, i) => `translate(${margin.left},${y(i)+margin.top})`)\r\n                .attr(\"class\", \"bars\")\r\n\r\n        bar.append(\"rect\")\r\n            .attr(\"fill\", \"steelblue\")\r\n            .attr(\"width\", d => x(d.value))\r\n            .attr(\"height\", y.bandwidth() - 1);\r\n        \r\n        bar.append(\"text\")\r\n            .attr(\"fill\", \"white\")\r\n            .attr(\"font-size\", \"12\")\r\n            .attr(\"x\", d => x(d.value) - 8)\r\n            .attr(\"y\", (y.bandwidth() - 1) / 2)\r\n            .attr(\"dy\", \"0.35em\")\r\n            .text(d => d.value);\r\n            \r\n        bar.append(\"text\")\r\n            .attr(\"text-anchor\", \"start\")\r\n            .attr(\"fill\", \"white\")\r\n            .attr(\"font-size\", \"12\")\r\n            .attr(\"x\", 15)\r\n            .attr(\"y\", (y.bandwidth() - 1) / 2)\r\n            .attr(\"dy\", \"0.35em\")\r\n            .text(d => d.name);\r\n        \r\n        bar.append(\"text\")\r\n            .attr(\"text-anchor\", \"end\")\r\n            .attr(\"fill\", \"black\")\r\n            .attr(\"font-size\", \"12\")\r\n            .attr(\"font-weight\", \"bold\")\r\n            .attr(\"x\", -10)\r\n            .attr(\"y\", (y.bandwidth() - 1) / 2)\r\n            .attr(\"dy\", \"0.35em\")\r\n            .text((d, i) => {\r\n                if (i > 0 && d.value === newData[i-1].value) return null\r\n                return i+1\r\n            });\r\n\r\n    }, [data])\r\n\r\n    return <svg style={{border: \"1px solid steelblue\"}} ref={svgRef} width={svgWidth} height={svgHeight} />;\r\n}\r\n\r\nexport default BarChart","import React from \"react\";\r\nimport BarChart from './BarChart'\r\n\r\nconst CapRace = ({data, dimensions}) => {\r\n    const formatData = function(data) {\r\n        let totals = {}\r\n        data.forEach(week => {\r\n          week.results.forEach(user => {\r\n            if (user.name in totals === false) totals[user.name] = 0\r\n            if (user.cap === true) totals[user.name] += 1\r\n          })\r\n        })\r\n        \r\n        return Object.entries(totals)\r\n          .filter(user => user[1] > 0)\r\n          .sort((a, b) => b[1] - a[1])\r\n          .map((key) => {\r\n            return {name: key[0], value: key[1]}\r\n        })\r\n    }\r\n\r\n    return <BarChart title=\"Cap Race\" data={formatData(data)} dimensions={dimensions} />\r\n}\r\n\r\nexport default CapRace","import React from \"react\";\r\nimport BarChart from './BarChart'\r\n\r\nconst SpoonRace = ({data, dimensions}) => {\r\n  const formatData = (data) => {\r\n    let totals = {}\r\n    data.forEach(week => {\r\n      week.results.forEach(user => {\r\n        if (user.name in totals === false) totals[user.name] = 0\r\n        if (user.spoon === true) totals[user.name] += 1\r\n      })\r\n    })\r\n    return Object.entries(totals)\r\n      .filter(user => user[1] > 0)\r\n      .sort((a, b) => b[1] - a[1])\r\n      .map((key) => {\r\n        return {name: key[0], value: key[1]}\r\n      })\r\n  }\r\n\r\n  return <BarChart title=\"Spoon Race\" data={formatData(data)} dimensions={dimensions} />\r\n}\r\n\r\nexport default SpoonRace\r\n","import React from \"react\";\r\nimport BarChart from './BarChart'\r\n\r\nconst BestPerformanceRecent = ({data, dimensions}) => {\r\n    const formatData = () => {\r\n        const totals = {}\r\n        data.slice(-5).forEach(week => {\r\n          week.results.forEach(user => {\r\n            if (user.name in totals === false) totals[user.name] = 0\r\n            totals[user.name] += parseInt(user.total)\r\n          })\r\n        })\r\n\r\n        return Object.entries(totals)\r\n            .filter(user => user[1] > 0)\r\n            .sort((a, b) => b[1] - a[1])\r\n            .map((key) => {\r\n                return {name: key[0], value: key[1]}\r\n            })\r\n    }\r\n\r\n    return <BarChart title=\"Recent Performance (Last 5)\" data={formatData(data)} dimensions={dimensions} />\r\n}\r\n\r\nexport default BestPerformanceRecent","import React from 'react'\r\nimport { useState, useEffect } from 'react'\r\nimport Box from '@mui/material/box'\r\nimport Stack from '@mui/material/Stack';\r\nimport Typography from '@mui/material/Typography'; \r\nimport { InputLabel, Select, MenuItem } from '@mui/material'\r\n\r\nfunction Row({player1, player2, title, sort}) {\r\n  let p1Color = 'black', p2Color = 'black', p1Border = '1px solid white', p2Border = '1px solid white'\r\n\r\n  if (player1 > player2 && sort === 'highest') p1Color = '#b44683'\r\n  else if (player1 < player2 && sort === 'highest') p2Color = '#b44683'\r\n  else if (player1 > player2 && sort === 'lowest') p2Color = '#b44683'\r\n  else if (player1 < player2 && sort === 'lowest') p1Color = '#b44683'\r\n\r\n  if (player1 > player2 && sort === 'highest') p1Border = '1px solid steelblue'\r\n  else if (player1 < player2 && sort === 'highest') p2Border = '1px solid steelblue'\r\n  else if (player1 > player2 && sort === 'lowest') p2Border = '1px solid steelblue'\r\n  else if (player1 < player2 && sort === 'lowest') p1Border = '1px solid steelblue'\r\n\r\n  return (\r\n    <Stack direction=\"row\" spacing={2} justifyContent=\"space-evenly\">\r\n      <Typography width={100} style={{color: p1Color, border: p1Border}} variant='h6'>{player1}</Typography>\r\n      <Typography width={200} variant='h6'>{title}</Typography>\r\n      <Typography width={100} style={{color: p2Color, border: p2Border}} variant='h6'>{player2}</Typography>\r\n    </Stack>\r\n  )\r\n}\r\n\r\nfunction HeadToHead({data}) {\r\n  const [players, setPlayers] = useState()\r\n  const [player1, setPlayer1] = useState('Jdart')\r\n  const [player2, setPlayer2] = useState('AdamSmith959')\r\n  const [stats, setStats] = useState()\r\n\r\n  useEffect(() => {\r\n    const players = {}\r\n\r\n    data.leaderboards.forEach(leaderboard => {\r\n      leaderboard.results.forEach((user, idx) => {\r\n        players[user.name.trim()] = {\r\n          ...user,\r\n          pos: idx+1,\r\n          cap: 0,\r\n          spoon: 0,\r\n          best: null,\r\n          worst: null\r\n        }\r\n      })\r\n    })\r\n\r\n    data.rounds.forEach(week => {\r\n      week.results.forEach(user => {\r\n        user.total = parseInt(user.total)\r\n        if (user.cap === true) players[user.name].cap += 1\r\n        if (user.spoon === true) players[user.name].spoon += 1\r\n        if (players[user.name].best === null || user.total > players[user.name].best) players[user.name].best = user.total\r\n        if (players[user.name].worst === null || user.total < players[user.name].worst) players[user.name].worst = user.total\r\n      })\r\n    })\r\n\r\n    setPlayers(Object.keys(players).sort())\r\n    setStats(players)\r\n  }, [data])\r\n\r\n  const handlePlayer1 = (event) => {\r\n    // console.log(event.target.value)\r\n    setPlayer1(event.target.value)\r\n  }\r\n\r\n  const handlePlayer2 = (event) => {\r\n    setPlayer2(event.target.value)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {stats &&\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\">\r\n        {/* <InputLabel>Player1</InputLabel> */}\r\n        <Stack spacing={1}>\r\n          <Stack direction=\"row\" spacing={2} justifyContent=\"space-evenly\">\r\n            <Select\r\n              style={{width: 200}}\r\n              defaultValue={player1}\r\n              onChange={handlePlayer1}\r\n            >\r\n              {players && players.map((key, idx) => <MenuItem value={key}>{key}</MenuItem>)}\r\n            </Select>\r\n\r\n            <Select\r\n              style={{width: 200}}\r\n              defaultValue={player2}\r\n              onChange={handlePlayer2}\r\n            >\r\n              {players && players.map((key, idx) => <MenuItem value={key}>{key}</MenuItem>)}\r\n            </Select>\r\n          </Stack>\r\n\r\n          <Row player1={parseFloat(stats[player1].pos)} player2={parseFloat(stats[player2].pos)} title='Position' sort='lowest' />\r\n          <Row player1={parseFloat(stats[player1].total)} player2={parseFloat(stats[player2].total)} title='Points' sort='highest' />\r\n          <Row player1={parseFloat(stats[player1].slam)} player2={parseFloat(stats[player2].slam)} title='Slam' sort='highest' />\r\n          <Row player1={parseFloat(stats[player1].exact)} player2={parseFloat(stats[player2].exact)} title='Exact' sort='highest' />\r\n          <Row player1={parseFloat(stats[player1].close)} player2={parseFloat(stats[player2].close)} title='Close' sort='highest' />\r\n          <Row player1={parseFloat(stats[player1].results)} player2={parseFloat(stats[player2].results)} title='Results' sort='highest' />\r\n          <Row player1={parseFloat(stats[player1].cap)} player2={parseFloat(stats[player2].cap)} title='Caps' sort='highest' />\r\n          <Row player1={parseFloat(stats[player1].spoon)} player2={parseFloat(stats[player2].spoon)} title='Spoons' sort='lowest' />\r\n          <Row player1={parseFloat(stats[player1].best)} player2={parseFloat(stats[player2].best)} title='Best Result' sort='highest' />\r\n          <Row player1={parseFloat(stats[player1].worst)} player2={parseFloat(stats[player2].worst)} title='Worst Result' sort='highest' />\r\n        </Stack>\r\n        {/* <pre>{JSON.stringify(stats[player1], null, 2)}</pre> */}\r\n        {/* <pre>{JSON.stringify(stats[player2], null, 2)}</pre> */}\r\n      </Box>\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default HeadToHead","import React from \"react\";\r\nimport * as d3 from \"d3\";\r\nimport { scaleLinear, scaleBand } from \"d3-scale\";\r\n\r\nconst BarChart = ({data, dimensions, title}) => {\r\n    const svgRef = React.useRef(null);\r\n    const { width, height, margin = {} } = dimensions;\r\n    const svgWidth = width + margin.left + margin.right;\r\n    const svgHeight = height + margin.top + margin.bottom;\r\n\r\n    \r\n    React.useEffect(() => {\r\n        const newData = data\r\n        \r\n        const x = scaleLinear()\r\n            .domain([0, d3.max(newData.map(d => d.total))])\r\n            .range([0, width]);\r\n        \r\n        const y = scaleBand()\r\n            .domain(d3.range(newData.length))\r\n            .range([0, height]);\r\n        \r\n        // Create root container where we will append all other chart elements\r\n        const svg = d3.select(svgRef.current)\r\n            .attr(\"font-family\", \"sans-serif\")\r\n            .attr(\"font-size\", \"10\")\r\n            .attr(\"text-anchor\", \"end\");\r\n        svg.selectAll(\"*\").remove(); // Clear svg content before adding new elements\r\n\r\n        svg.append(\"text\")\r\n            .attr(\"x\", (svgWidth/2))\r\n            .attr(\"y\", 20)\r\n            .attr(\"text-anchor\", \"middle\")\r\n            .attr(\"font-size\", \"18\")\r\n            .attr(\"font-weight\", \"bold\")\r\n            .text(title)\r\n\r\n\r\n        svg.append(\"g\")\r\n            .attr(\"transform\", `translate(${margin.left}, ${height+margin.top})`)\r\n            .call(d3.axisBottom(x));\r\n\r\n        const bar = svg.selectAll(\"g.bars\")\r\n            .data(newData)\r\n            .join(\"g\")\r\n                .attr(\"transform\", (d, i) => `translate(${margin.left},${y(i)+margin.top})`)\r\n                .attr(\"class\", \"bars\")\r\n\r\n        bar.append(\"rect\")\r\n            .attr(\"fill\", \"steelblue\")\r\n            .attr(\"width\", d => x(d.total))\r\n            .attr(\"height\", y.bandwidth() - 1);\r\n\r\n        bar.append(\"rect\")\r\n            .attr(\"fill\", \"red\")\r\n            .attr(\"width\", d => x(d.results+d.close+d.exact+d.slam))\r\n            .attr(\"height\", y.bandwidth() - 1);\r\n\r\n        bar.append(\"rect\")\r\n            .attr(\"fill\", \"steelblue\")\r\n            .attr(\"width\", d => x(d.results+d.close+d.exact))\r\n            .attr(\"height\", y.bandwidth() - 1);\r\n\r\n        bar.append(\"rect\")\r\n            .attr(\"fill\", \"green\")\r\n            .attr(\"width\", d => x(d.results+d.close))\r\n            .attr(\"height\", y.bandwidth() - 1);\r\n\r\n        bar.append(\"rect\")\r\n            .attr(\"fill\", \"orange\")\r\n            .attr(\"width\", d => x(d.results))\r\n            .attr(\"height\", y.bandwidth() - 1);\r\n\r\n            \r\n        bar.append(\"text\")\r\n            .attr(\"fill\", \"black\")\r\n            .attr(\"font-size\", \"12\")\r\n            .attr(\"text-anchor\", \"end\")\r\n            .attr(\"x\", d => x(d.total) - 10)\r\n            .attr(\"y\", (y.bandwidth() - 1) / 2)\r\n            .attr(\"dy\", \"0.35em\")\r\n            .text(d => d.total);\r\n            \r\n        bar.append(\"text\")\r\n            .attr(\"text-anchor\", \"start\")\r\n            .attr(\"fill\", \"black\")\r\n            .attr(\"font-size\", \"12\")\r\n            .attr(\"x\", 15 + width)\r\n            .attr(\"y\", (y.bandwidth() - 1) / 2)\r\n            .attr(\"dy\", \"0.35em\")\r\n            .text(d => d.name);\r\n        \r\n        bar.append(\"text\")\r\n            .attr(\"text-anchor\", \"end\")\r\n            .attr(\"fill\", \"black\")\r\n            .attr(\"font-size\", \"12\")\r\n            .attr(\"font-weight\", \"bold\")\r\n            .attr(\"x\", -10)\r\n            .attr(\"y\", (y.bandwidth() - 1) / 2)\r\n            .attr(\"dy\", \"0.35em\")\r\n            .text((d, i) => {\r\n                if (i > 0 && d.total === newData[i-1].total) return null\r\n                return i+1\r\n            });\r\n\r\n    }, [data])\r\n\r\n    return <svg style={{border: \"1px solid steelblue\"}} ref={svgRef} width={svgWidth} height={svgHeight} />;\r\n}\r\n\r\nexport default BarChart","import React from \"react\";\r\nimport BarChart from './BarChart1'\r\n\r\nconst Standings = ({data, dimensions}) => {\r\n    data = data.map(d => {\r\n        return {\r\n            name: d.name,\r\n            total: parseFloat(d.total),\r\n            results: parseFloat(d.results),\r\n            close: parseFloat(d.close),\r\n            exact: parseFloat(d.exact),\r\n            slam: parseFloat(d.slam)\r\n        }\r\n    })\r\n\r\n    return <BarChart title=\"Total Points\" data={data} dimensions={dimensions} />\r\n}\r\n\r\nexport default Standings","import React from \"react\";\r\nimport * as d3 from \"d3\";\r\nimport { scaleLinear } from \"d3-scale\";\r\n\r\n\r\n\r\nconst LineChart = ({data, dimensions}) => {\r\n    const svgRef = React.useRef(null);\r\n    const { width, height, margin = {} } = dimensions;\r\n    const svgWidth = width + margin.left + margin.right;\r\n    const svgHeight = height + margin.top + margin.bottom;\r\n\r\n    const players = {}\r\n    data.forEach((round, index) => {\r\n        round.results.forEach(result => {\r\n            if (result.name in players === false) players[result.name] = []\r\n            players[result.name].push([index+1, result.total])\r\n        })\r\n    })\r\n\r\n    // console.log(data[data.length-1].results)\r\n    const namesOrder = data[data.length-1].results.map(result => result.name)\r\n    \r\n    React.useEffect(() => {\r\n        const xScale = scaleLinear().domain([1, data.length]).range([0, width])\r\n        const yScale = d3.scaleLinear().domain([0, Math.ceil(data[data.length-1].results[0].total)]).range([height, 0])\r\n\r\n        // Create root container where we will append all other chart elements\r\n        const svg = d3.select(svgRef.current)\r\n            .attr(\"font-family\", \"sans-serif\")\r\n            .attr(\"font-size\", \"10\")\r\n            .attr(\"text-anchor\", \"end\");\r\n        svg.selectAll(\"*\").remove(); // Clear svg content before adding new elements\r\n\r\n        // Title\r\n        svg.append('text')\r\n            .attr('x', svgWidth / 2)\r\n            .attr('y', 20)\r\n            .attr('text-anchor', 'middle')\r\n            .style('font-family', 'Helvetica')\r\n            .style('font-size', 20)\r\n            .text('Season Points');\r\n\r\n        // X axis\r\n        svg.append(\"g\")\r\n            .attr(\"transform\", `translate(${margin.left}, ${height+margin.top})`)\r\n            .call(d3.axisBottom(xScale).ticks(data.length));\r\n        // X label\r\n        svg.append('text')\r\n            .attr('x', width/2)\r\n            .attr('y', height + margin.top + 35 )\r\n            .attr('text-anchor', 'middle')\r\n            .style('font-family', 'Helvetica')\r\n            .style('font-size', 12)\r\n            .text('Rounds');\r\n        // Y axis\r\n        svg.append(\"g\")\r\n            .attr(\"transform\", `translate(${margin.left}, ${margin.top})`)\r\n            .call(d3.axisLeft(yScale));\r\n        // Y label\r\n        svg.append('text')\r\n            .attr('text-anchor', 'middle')\r\n            .attr('transform', `translate(${margin.left - 40}, ${svgHeight/2})rotate(-90)`)\r\n            .style('font-family', 'Helvetica')\r\n            .style('font-size', 12)\r\n            .text('Points');\r\n        \r\n        // const playerKeys = Object.keys(players)\r\n\r\n\r\n\r\n        for (let idx = 0; idx < namesOrder.length; idx++) {\r\n            const player = namesOrder[idx];\r\n            const playerEl = svg.append('g')\r\n                .attr('id', player.split(' ').join(''))\r\n                .attr('cursor', 'pointer')\r\n                .on(\"mouseover\", function(d) {\r\n                    // console.log('hover')\r\n                    d3.select(this).selectAll('text').style(\"fill\", \"#CC0000\");\r\n                    // d3.select(this.parentNode).selectAll(\"path.line:not(#\"+player.split(' ').join('')+\")\").style(\"stroke\", \"grey\")\r\n                    // d3.select(this.parentNode).selectAll(\"circle:not(#\"+player.split(' ').join('')+\")\").style(\"fill\", \"grey\")\r\n                    d3.select(this.parentNode).selectAll(\"path#\"+player.split(' ').join('')).style(\"stroke-width\", \"4\")\r\n                    d3.select(this.parentNode).selectAll(\"path#\"+player.split(' ').join('')).style(\"stroke\", \"#CC0000\")\r\n                })\r\n                .on(\"mouseout\", function(d) {\r\n                    d3.select(this).selectAll('text').style(\"fill\", \"black\");\r\n                    // d3.select(this.parentNode).selectAll(\"path.line:not(#\"+player.split(' ').join('')+\")\").style(\"stroke\", \"#CC0000\")\r\n                    // d3.select(this.parentNode).selectAll(\"circle:not(#\"+player.split(' ').join('')+\")\").style(\"fill\", \"#CC0000\")\r\n                    d3.select(this.parentNode).selectAll(\"path#\"+player.split(' ').join('')).style(\"stroke-width\", \"2\")\r\n                    d3.select(this.parentNode).selectAll(\"path#\"+player.split(' ').join('')).style(\"stroke\", \"grey\")\r\n                })\r\n    \r\n            playerEl.append('g')\r\n                .selectAll(\"dot\")\r\n                .data(players[player])\r\n                .enter()\r\n                .append(\"circle\")\r\n                .attr(\"cx\", function (d) { return xScale(d[0]); } )\r\n                .attr(\"cy\", function (d) { return yScale(d[1]); } )\r\n                .attr(\"r\", 2)\r\n                .attr(\"transform\", `translate(${margin.left}, ${margin.top})`)\r\n                .style(\"fill\", \"grey\");\r\n    \r\n            var line = d3.line()\r\n                .x(function(d) { return xScale(d[0]); }) \r\n                .y(function(d) { return yScale(d[1]); }) \r\n                // .curve(d3.curveMonotoneX)\r\n                \r\n            playerEl.append(\"path\")\r\n                .datum(players[player]) \r\n                .attr(\"class\", \"line\")\r\n                .attr(\"id\", player.split(' ').join(''))\r\n                .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\")\r\n                .attr(\"d\", line)\r\n                .style(\"fill\", \"none\")\r\n                .style(\"stroke\", \"grey\")\r\n                .style(\"stroke-width\", \"2\");\r\n    \r\n            playerEl.append('text')\r\n                .datum(players[player])\r\n                .attr('text-anchor', 'start')\r\n                .attr('alignment-baseline', 'middle')\r\n                .attr('transform', d => `translate(${width+margin.left+15}, ${margin.top+idx*20})`)\r\n                // .attr('transform', `translate(${width+margin.left+20}, ${100})`)\r\n                .style('font-family', 'Helvetica')\r\n                .style('font-size', 12)\r\n                .style('cursor', 'pointer')\r\n                .text(player)\r\n            \r\n        }\r\n\r\n\r\n        // data.forEach(dataset => {\r\n        //     svg.append('g')\r\n        //         .selectAll(\"dot\")\r\n        //         .data(dataset)\r\n        //         .enter()\r\n        //         .append(\"circle\")\r\n        //         .attr(\"cx\", function (d) { return xScale(d[0]); } )\r\n        //         .attr(\"cy\", function (d) { return yScale(d[1]); } )\r\n        //         .attr(\"r\", 2)\r\n        //         .attr(\"transform\", `translate(${margin.left}, ${margin.top})`)\r\n        //         .style(\"fill\", \"#CC0000\");\r\n    \r\n        //     var line = d3.line()\r\n        //         .x(function(d) { return xScale(d[0]); }) \r\n        //         .y(function(d) { return yScale(d[1]); }) \r\n        //         .curve(d3.curveMonotoneX)\r\n                \r\n        //     svg.append(\"path\")\r\n        //         .datum(dataset) \r\n        //         .attr(\"class\", \"line\") \r\n        //         .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\")\r\n        //         .attr(\"d\", line)\r\n        //         .style(\"fill\", \"none\")\r\n        //         .style(\"stroke\", \"#CC0000\")\r\n        //         .style(\"stroke-width\", \"2\");\r\n        // })\r\n\r\n    }, [data])\r\n\r\n    return <svg style={{border: \"1px solid steelblue\"}} ref={svgRef} width={svgWidth} height={svgHeight} />;\r\n}\r\n\r\nexport default LineChart","import React from \"react\";\r\nimport * as d3 from \"d3\";\r\nimport { scaleLinear } from \"d3-scale\";\r\n\r\n\r\n\r\nconst LineChart = ({data, dimensions}) => {\r\n    const svgRef = React.useRef(null);\r\n    const { width, height, margin = {} } = dimensions;\r\n    const svgWidth = width + margin.left + margin.right;\r\n    const svgHeight = height + margin.top + margin.bottom;\r\n\r\n    const players = {}\r\n    data.forEach((round, index) => {\r\n        round.results.forEach((result, id2) => {\r\n            if (result.name in players === false) players[result.name] = []\r\n            players[result.name].push([index+1, id2+1])\r\n        })\r\n    })\r\n\r\n    React.useEffect(() => {\r\n        const xScale = scaleLinear().domain([1, data.length]).range([0, width])\r\n        const yScale = d3.scaleLinear().domain([16, 1]).range([height, 0])\r\n        // const yScale = d3.scaleLinear().domain([0, Math.ceil(data[data.length-1].results[0].total)]).range([height, 0])\r\n\r\n        // Create root container where we will append all other chart elements\r\n        const svg = d3.select(svgRef.current)\r\n            .attr(\"font-family\", \"sans-serif\")\r\n            .attr(\"font-size\", \"10\")\r\n            .attr(\"text-anchor\", \"end\");\r\n        svg.selectAll(\"*\").remove(); // Clear svg content before adding new elements\r\n\r\n        // Title\r\n        svg.append('text')\r\n            .attr('x', svgWidth / 2)\r\n            .attr('y', 20)\r\n            .attr('text-anchor', 'middle')\r\n            .style('font-family', 'Helvetica')\r\n            .style('font-size', 20)\r\n            .text('Season Position');\r\n\r\n        // X axis\r\n        svg.append(\"g\")\r\n            .attr(\"transform\", `translate(${margin.left}, ${height+margin.top})`)\r\n            .call(\r\n                d3.axisBottom(xScale)\r\n                // .tickFormat(d3.format(\"d\"))\r\n                .ticks(data.length)\r\n            )\r\n            // .call(d3.axisBottom(xScale))\r\n        // X label\r\n        svg.append('text')\r\n            .attr('x', width/2)\r\n            .attr('y', height + margin.top + 35 )\r\n            .attr('text-anchor', 'middle')\r\n            .style('font-family', 'Helvetica')\r\n            .style('font-size', 12)\r\n            .text('Rounds');\r\n        // Y axis\r\n        svg.append(\"g\")\r\n            .attr(\"transform\", `translate(${margin.left}, ${margin.top})`)\r\n            .call(d3.axisLeft(yScale).ticks(16));\r\n        // Y label\r\n        svg.append('text')\r\n            .attr('text-anchor', 'middle')\r\n            .attr('transform', `translate(${margin.left - 40}, ${svgHeight/2})rotate(-90)`)\r\n            .style('font-family', 'Helvetica')\r\n            .style('font-size', 12)\r\n            .text('Points');\r\n        \r\n        \r\n\r\n        for(const player in players) {\r\n            const playerEl = svg.append('g')\r\n                .attr('id', player.split(' ').join(''))\r\n                .attr('cursor', 'pointer')\r\n                .on(\"mouseover\", function(d) {\r\n                    // console.log('hover')\r\n                    d3.select(this).selectAll('text').style(\"fill\", \"#CC0000\");\r\n                    // d3.select(this.parentNode).selectAll(\"path.line:not(#\"+player.split(' ').join('')+\")\").style(\"stroke\", \"grey\")\r\n                    // d3.select(this.parentNode).selectAll(\"circle:not(#\"+player.split(' ').join('')+\")\").style(\"fill\", \"grey\")\r\n                    d3.select(this.parentNode).selectAll(\"path#\"+player.split(' ').join('')).style(\"stroke-width\", \"4\")\r\n                    d3.select(this.parentNode).selectAll(\"path#\"+player.split(' ').join('')).style(\"stroke\", \"#CC0000\")\r\n                })\r\n                .on(\"mouseout\", function(d) {\r\n                    d3.select(this).selectAll('text').style(\"fill\", \"black\");\r\n                    // d3.select(this.parentNode).selectAll(\"path.line:not(#\"+player.split(' ').join('')+\")\").style(\"stroke\", \"#CC0000\")\r\n                    // d3.select(this.parentNode).selectAll(\"circle:not(#\"+player.split(' ').join('')+\")\").style(\"fill\", \"#CC0000\")\r\n                    d3.select(this.parentNode).selectAll(\"path#\"+player.split(' ').join('')).style(\"stroke-width\", \"2\")\r\n                    d3.select(this.parentNode).selectAll(\"path#\"+player.split(' ').join('')).style(\"stroke\", \"grey\")\r\n                })\r\n\r\n            playerEl.append('g')\r\n                .selectAll(\"dot\")\r\n                .data(players[player])\r\n                .enter()\r\n                .append(\"circle\")\r\n                .attr(\"id\", player.split(' ').join(''))\r\n                .attr(\"cx\", function (d) { return xScale(d[0]); } )\r\n                .attr(\"cy\", function (d) { return yScale(d[1]); } )\r\n                .attr(\"r\", 2)\r\n                .attr(\"transform\", `translate(${margin.left}, ${margin.top})`)\r\n                .style(\"fill\", \"grey\")\r\n\r\n            var line = d3.line()\r\n                .x(function(d) { return xScale(d[0]); }) \r\n                .y(function(d) { return yScale(d[1]); }) \r\n                // .curve(d3.curveMonotoneX)\r\n                \r\n            playerEl.append(\"path\")\r\n                .datum(players[player]) \r\n                .attr(\"class\", \"line\")\r\n                .attr(\"id\", player.split(' ').join(''))\r\n                .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\")\r\n                .attr(\"d\", line)\r\n                .style(\"fill\", \"none\")\r\n                .style(\"stroke\", \"grey\")\r\n                .style(\"stroke-width\", \"2\");\r\n\r\n            playerEl.append('text')\r\n                .datum(players[player])\r\n                .attr('text-anchor', 'start')\r\n                .attr('alignment-baseline', 'middle')\r\n                .attr('transform', d => `translate(${width+margin.left+15}, ${yScale(d[d.length-1][1])+margin.top})`)\r\n                // .attr('transform', `translate(${width+margin.left+20}, ${100})`)\r\n                .style('font-family', 'Helvetica')\r\n                .style('font-size', 12)\r\n                .style('cursor', 'pointer')\r\n                .text(player)\r\n        }\r\n\r\n        // data.forEach(dataset => {\r\n        //     svg.append('g')\r\n        //         .selectAll(\"dot\")\r\n        //         .data(dataset)\r\n        //         .enter()\r\n        //         .append(\"circle\")\r\n        //         .attr(\"cx\", function (d) { return xScale(d[0]); } )\r\n        //         .attr(\"cy\", function (d) { return yScale(d[1]); } )\r\n        //         .attr(\"r\", 2)\r\n        //         .attr(\"transform\", `translate(${margin.left}, ${margin.top})`)\r\n        //         .style(\"fill\", \"#CC0000\");\r\n    \r\n        //     var line = d3.line()\r\n        //         .x(function(d) { return xScale(d[0]); }) \r\n        //         .y(function(d) { return yScale(d[1]); }) \r\n        //         .curve(d3.curveMonotoneX)\r\n                \r\n        //     svg.append(\"path\")\r\n        //         .datum(dataset) \r\n        //         .attr(\"class\", \"line\") \r\n        //         .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\")\r\n        //         .attr(\"d\", line)\r\n        //         .style(\"fill\", \"none\")\r\n        //         .style(\"stroke\", \"#CC0000\")\r\n        //         .style(\"stroke-width\", \"2\");\r\n        // })\r\n\r\n    }, [data])\r\n\r\n    return <svg style={{border: \"1px solid steelblue\"}} ref={svgRef} width={svgWidth} height={svgHeight} />;\r\n}\r\n\r\nexport default LineChart","import * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Tabs from '@mui/material/Tabs';\r\nimport Tab from '@mui/material/Tab';\r\nimport Typography from '@mui/material/Typography';\r\nimport Box from '@mui/material/Box';\r\n\r\nimport HeadToHead from './HeadToHead';\r\nimport CapRace from './CapRace';\r\nimport SpoonRace from './SpoonRace';\r\nimport BestPerformanceRecent from './BestPerformanceRecent';\r\nimport Standings from './Standings';\r\nimport LineChart from './LineChart';\r\nimport SeasonPos from './SeasonPos';\r\nimport { margin } from '@mui/system';\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box sx={{ p: 3 }}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.number.isRequired,\r\n  value: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    'aria-controls': `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst dimensions = {\r\n    width: 600,\r\n    height: 300,\r\n    margin: {\r\n      top: 30,\r\n      right: 150,\r\n      bottom: 30,\r\n      left: 60\r\n    }\r\n};\r\n\r\nexport default function BasicTabs({data}) {\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ width: '100%' }}>\r\n      <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\r\n        <Tabs value={value} onChange={handleChange} aria-label=\"basic tabs example\" centered>\r\n          <Tab label=\"Analysis\" {...a11yProps(0)} />\r\n          {/* <Tab label=\"Individual\" {...a11yProps(1)} /> */}\r\n          <Tab label=\"Head To Head\" {...a11yProps(1)} />\r\n        </Tabs>\r\n      </Box>\r\n      <TabPanel value={value} index={0}>\r\n        <Standings data={data.leaderboards[data.leaderboards.length-1].results} dimensions={dimensions} />\r\n        <SeasonPos data={data.leaderboards} dimensions={{...dimensions, margin: {...dimensions.margin, right: 150, top: 40}}} />\r\n        <LineChart data={data.leaderboards} dimensions={{...dimensions, margin: {...dimensions.margin, right: 150}}} />\r\n        <BestPerformanceRecent data={data.rounds} dimensions={dimensions} />\r\n        <CapRace data={data.rounds} dimensions={dimensions} />\r\n        <SpoonRace data={data.rounds} dimensions={dimensions} />\r\n      </TabPanel>\r\n      {/* <TabPanel value={value} index={1}>\r\n      </TabPanel> */}\r\n      <TabPanel value={value} index={1}>\r\n        <HeadToHead data={data}/>\r\n      </TabPanel>\r\n    </Box>\r\n  );\r\n}\r\n","// import logo from './logo.svg';\nimport React from 'react'\nimport './App.css';\nimport data from './2022.json'\nimport Container from '@mui/material/Container';\nimport Typography from '@mui/material/Typography';\n\nimport schc from \"./SCHC.json\";\nimport vcit from \"./VCIT.json\";\nimport portfolio from \"./portfolio.json\";\n\nimport TopStats from './components/TopStats';\nimport MultilineChart from './components/MultilineChart'\nimport CapRace from './components/CapRace';\nimport SpoonRace from './components/SpoonRace';\nimport BestPerformanceRecent from './components/BestPerformanceRecent';\nimport Tabs from './components/Tabs'\n\nconst portfolioData = {\n  name: \"Portfolio\",\n  color: \"orange\",\n  items: portfolio.map((d) => ({ ...d, date: new Date(d.date) }))\n};\nconst schcData = {\n  name: \"SCHC\",\n  color: \"#d53e4f\",\n  items: schc.map((d) => ({ ...d, date: new Date(d.date) }))\n};\nconst vcitData = {\n  name: \"VCIT\",\n  color: \"#5e4fa2\",\n  items: vcit.map((d) => ({ ...d, date: new Date(d.date) }))\n};\n\nconst dimensions = {\n  width: 600,\n  height: 300,\n  margin: {\n    top: 30,\n    right: 30,\n    bottom: 30,\n    left: 60\n  }\n};\n\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Container>\n        <Typography style={{color: 'steelblue'}} variant='h2'>BruStats | Bude Beys</Typography>\n        <Typography variant='h4' gutterBottom>2022-23</Typography>\n      \n\n        <TopStats style={{marginBottom: 25}} data={data} />\n\n        <Tabs data={data}/>\n\n        <br />\n        {/* <BestPerformanceRecent data={data.rounds} dimensions={dimensions} /> */}\n        <br />\n        {/* <CapRace data={data.rounds} dimensions={dimensions} /> */}\n        <br />\n        {/* <SpoonRace data={data.rounds} dimensions={dimensions} /> */}\n        <br />\n        {/* <MultilineChart\n          data={[portfolioData, schcData, vcitData]}\n          dimensions={dimensions}\n        /> */}\n        {/* {JSON.stringify(data.leaderboards)} */}\n        {/* <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <p>\n            Edit <code>src/App.js</code> and save to reload.\n          </p>\n          <a\n            className=\"App-link\"\n            href=\"https://reactjs.org\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Learn React\n          </a>\n        </header> */}\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport '@fontsource/roboto/300.css';\nimport '@fontsource/roboto/400.css';\nimport '@fontsource/roboto/500.css';\nimport '@fontsource/roboto/700.css';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}